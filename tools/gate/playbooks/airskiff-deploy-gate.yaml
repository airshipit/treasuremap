# Copyright 2018 AT&T Intellectual Property.  All other rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: all

  tasks:
    - name: Clone dependencies
      shell: |
        set -ex
        export OSH_INFRA_COMMIT={{ OSH_INFRA_COMMIT }}
        export OSH_COMMIT={{ OSH_COMMIT }}

        ./tools/deployment/airskiff/developer/000-clone-dependencies.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"

    - name: Setup AppArmor
      shell: |
        set -ex
        ./tools/deployment/airskiff/developer/009-setup-apparmor.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"

    - name: Deploy Kubernetes with Minikube
      shell: |
        set -ex
        sudo fdisk --list
        df -h
        sudo mkdir -p /opt/ext_vol
        BIG_VOLUME=$(sudo fdisk -l 2>&1 | grep  -E 80G | grep Linux | awk '{print $1}')
        if ! mount | grep "${BIG_VOLUME}"
        then
          sudo mkfs.ext4 "${BIG_VOLUME}"
          sudo mount "${BIG_VOLUME}" /opt/ext_vol
          df -h
        fi
        ./tools/deployment/airskiff/developer/010-deploy-k8s.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"

    - name: Setup OpenStack Client
      shell: |
        set -ex
        ./tools/deployment/airskiff/developer/020-setup-client.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

    - name: Build all charts locally
      shell: |
        set -ex

        export HELM_ARTIFACT_URL={{ HELM_ARTIFACT_URL }}
        export HTK_COMMIT={{ HTK_COMMIT }}

        ./tools/deployment/airskiff/developer/015-make-all-charts.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

    - name: Start artifactory
      shell: |
        set -ex
        # start http server with artifacts
        docker rm artifacts --force || true
        docker run --name artifacts -p 8282:80 -v $(pwd)/../artifacts:/usr/share/nginx/html -d nginx
        sleep 10
        curl --verbose -I http://control-plane.minikube.internal:8282/memcached.tgz
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

    - name: Deploy Airship components using Armada
      shell: |
        set -ex
        mkdir  -p ~/.kube
        cp -rp /home/zuul/.kube/config ~/.kube/config
        export PL_SITE="{{ site }}"
        ./tools/deployment/airskiff/developer/030-armada-bootstrap.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

    - name: Deploy Software using Airship
      shell: |
        set -ex
        export PL_SITE="{{ site }}"
        ./tools/deployment/airskiff/developer/100-deploy-osh.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

    - name: Wait for deployment completion
      shell: |
        set -ex
        ./tools/deployment/airskiff/common/os-env.sh
        ./tools/gate/wait-for-shipyard.sh
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

    - name: Stop artifactory
      shell: |
        set -ex
        # terminate artifactory
        docker rm artifacts --force || true
      args:
        chdir: "{{ zuul.project.src_dir }}"
      become: true

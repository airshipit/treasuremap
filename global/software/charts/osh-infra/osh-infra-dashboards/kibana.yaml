---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: kibana
  labels:
    name: kibana-global
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    # Chart source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh_infra.kibana
      dest:
        path: .source

    # Images
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.osh_infra.kibana
      dest:
        path: .values.images.tags

    # Endpoints
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_infra_endpoints
        path: .osh_infra.elasticsearch
      dest:
        path: .values.endpoints.elasticsearch
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_infra_endpoints
        path: .osh_infra.kibana
      dest:
        path: .values.endpoints.kibana
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_infra_endpoints
        path: .osh_infra.ldap
      dest:
        path: .values.endpoints.ldap
    # Accounts
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_infra_service_accounts
        path: .osh_infra.elasticsearch.admin
      dest:
        path: .values.endpoints.elasticsearch.auth.admin

    # Secrets
    - dest:
        path: .values.endpoints.elasticsearch.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_infra_elasticsearch_admin_password
        path: .

    # LDAP Mech ID Details
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_infra_service_accounts
        path: .osh_infra.ldap.admin
      dest:
        path: .values.endpoints.ldap.auth.admin
    - dest:
        path: .values.endpoints.ldap.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: osh_keystone_ldap_mechid_password
        path: .
data:
  chart_name: kibana
  release: kibana
  namespace: osh-infra
  wait:
    timeout: 900
    labels:
      release_group: clcp-kibana
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - type: job
          labels:
            release_group: clcp-kibana
      create: []
    post:
      create: []
  values:
    conf:
      create_kibana_indexes:
        enabled: true
        indexes:
          base:
            - airship
            - audit_tsee
            - auth
            - calico
            - ceph
            - flows
            - jenkins
            - journal
            - kernel_syslog
            - libvirt
            - logstash
            - lma
            - utility_access
          application:
            - openstack
            - openvswitch
        default_index: logstash
      kibana:
        elasticsearch:
          pingTimeout: 30000
          requestTimeout: 60000
          startupTimeout: 15000
      httpd: |
        ServerRoot "/usr/local/apache2"
        Listen 80
        LoadModule mpm_event_module modules/mod_mpm_event.so
        LoadModule authn_file_module modules/mod_authn_file.so
        LoadModule authn_core_module modules/mod_authn_core.so
        LoadModule authz_host_module modules/mod_authz_host.so
        LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
        LoadModule authz_user_module modules/mod_authz_user.so
        LoadModule authz_core_module modules/mod_authz_core.so
        LoadModule access_compat_module modules/mod_access_compat.so
        LoadModule auth_basic_module modules/mod_auth_basic.so
        LoadModule ldap_module modules/mod_ldap.so
        LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
        LoadModule reqtimeout_module modules/mod_reqtimeout.so
        LoadModule filter_module modules/mod_filter.so
        LoadModule proxy_html_module modules/mod_proxy_html.so
        LoadModule log_config_module modules/mod_log_config.so
        LoadModule env_module modules/mod_env.so
        LoadModule headers_module modules/mod_headers.so
        LoadModule setenvif_module modules/mod_setenvif.so
        LoadModule version_module modules/mod_version.so
        LoadModule proxy_module modules/mod_proxy.so
        LoadModule proxy_connect_module modules/mod_proxy_connect.so
        LoadModule proxy_http_module modules/mod_proxy_http.so
        LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
        LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
        LoadModule slotmem_plain_module modules/mod_slotmem_plain.so
        LoadModule unixd_module modules/mod_unixd.so
        LoadModule status_module modules/mod_status.so
        LoadModule autoindex_module modules/mod_autoindex.so
        <IfModule unixd_module>
        User daemon
        Group daemon
        </IfModule>
        <Directory />
            AllowOverride none
            Require all denied
        </Directory>
        <Files ".ht*">
            Require all denied
        </Files>
        ErrorLog /dev/stderr
        LogLevel warn
        <IfModule log_config_module>
            LogFormat "%a %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
            LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" proxy
            LogFormat "%h %l %u %t \"%r\" %>s %b" common

            <IfModule logio_module>
              LogFormat "%a %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
            </IfModule>

            SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
            CustomLog /dev/stdout common
            CustomLog /dev/stdout combined
            CustomLog /dev/stdout proxy env=forwarded
        </IfModule>
        <Directory "/usr/local/apache2/cgi-bin">
            AllowOverride None
            Options None
            Require all granted
        </Directory>
        <IfModule headers_module>
            RequestHeader unset Proxy early
        </IfModule>
        <IfModule proxy_html_module>
        Include conf/extra/proxy-html.conf
        </IfModule>
        LDAPVerifyServerCert Off
        LDAPTrustedGlobalCert CA_BASE64 /dev/null
        <VirtualHost *:80>
          <Location />
              ProxyPass http://localhost:{{ tuple "kibana" "internal" "kibana" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}/
              ProxyPassReverse http://localhost:{{ tuple "kibana" "internal" "kibana" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}/
          </Location>
          <Proxy *>
              AuthName "Kibana"
              AuthType Basic
              AuthBasicProvider file ldap
              AuthUserFile /usr/local/apache2/conf/.htpasswd
              AuthLDAPBindDN {{ .Values.endpoints.ldap.auth.admin.bind }}
              AuthLDAPBindPassword {{ .Values.endpoints.ldap.auth.admin.password }}
              AuthLDAPURL {{ tuple "ldap" "public" "ldap" . | include "helm-toolkit.endpoints.keystone_endpoint_uri_lookup" | quote }}
              Require valid-user
          </Proxy>
        </VirtualHost>
    pod:
      affinity:
        anti:
          type:
            dashboard: requiredDuringSchedulingIgnoredDuringExecution
          weight:
            default: 100
      replicas:
        kibana: 3
      resources:
        enabled: true
        apache_proxy:
          limits:
            memory: "1024Mi"
            cpu: "2000m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        kibana:
          requests:
            memory: "1024Mi"
            cpu: "1000m"
          limits:
            memory: "4096Mi"
            cpu: "2000m"
      lifecycle:
        upgrades:
          deployments:
            rolling_update:
              max_unavailable: 50%
    labels:
      kibana:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      job:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    network:
      kibana:
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/affinity: cookie
            nginx.ingress.kubernetes.io/session-cookie-name: kube-ingress-session-kibana
            nginx.ingress.kubernetes.io/session-cookie-hash: sha1
            nginx.ingress.kubernetes.io/session-cookie-expires: "600"
            nginx.ingress.kubernetes.io/session-cookie-max-age: "600"
  dependencies:
    - kibana-htk
...
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: kibana-htk
  layeringDefinition:
    abstract: false
    layer: global
  substitutions:
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh_infra.kibana-htk
      dest:
        path: .source
  storagePolicy: cleartext
data:
  chart_name: kibana-htk
  release: kibana-htk
  namespace: kibana-htk
  timeout: 600
  wait:
    timeout: 600
  upgrade:
    no_hooks: true
  values: {}
  dependencies: []
...

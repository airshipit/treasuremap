---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: global-ingress-kube-system
  labels:
    ingress: kube-system
    name: ingress-kube-system-global
  layeringDefinition:
    abstract: true
    layer: global
  storagePolicy: cleartext
  substitutions:
    # Chart source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.kubernetes.ingress
      dest:
        path: .source
    # Images
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.ingress.controller
        pattern: ^(.*):(.*)$
        match_group: 1
      dest:
        path: .values.controller.image.repository
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.ingress.controller
        pattern: ^(.*):(.*)$
        match_group: 2
      dest:
        path: .values.controller.image.tag
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.ingress.defaultBackend
        pattern: ^(.*):(.*)$
        match_group: 1
      dest:
        path: .values.defaultBackend.image.repository
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.ingress.defaultBackend
        pattern: ^(.*):(.*)$
        match_group: 2
      dest:
        path: .values.defaultBackend.image.tag
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.ingress.patch
        pattern: ^(.*):(.*)$
        match_group: 1
      dest:
        path: .values.controller.admissionWebhooks.patch.image.repository
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.ingress.defaultBackend
        pattern: ^(.*):(.*)$
        match_group: 2
      dest:
        path: .values.controller.admissionWebhooks.patch.image.tag
    # Ingress VIP
    # - src:
    #     schema: pegleg/CommonAddresses/v1
    #     name: common-addresses
    #     path: .calico.bgp.ipv4.ingress_vip
    #     pattern: ^(.*)/
    #     match_group: 1
    #   dest:
    #     path: .values.controller.service.externalIPs[0]
data:
  chart_name: ingress-kube-system
  release: ingress-kube-system
  namespace: kube-system
  wait:
    timeout: 300
    labels:
      release_group: airship-ingress-kube-system
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - type: job
          labels:
            release_group: airship-ingress-kube-system
  values:
    commonLabels:
      release_group: airship-ingress-kube-system
    controller:
      allowSnippetAnnotations: true
      enableAnnotationValidations: true
      admissionWebhooks:
        enabled: false
        patch:
          image:
            tag: REPLACED
            repository: REPLACED
      config:
        enable-underscores-in-headers: "true"
        proxy-connect-timeout: "75"
        proxy-next-upstream: error timeout http_503 http_504
        proxy-read-timeout: "60"
        proxy-send-timeout: "60"
        ssl-ciphers: ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
        ssl-reject-handshake: "true"
        upstream-keepalive-timeout: "300"
      electionID: airship-ingress-kube-system-nginx-cluster
      extraArgs:
        default-ssl-certificate: ucp/keystone-tls-public
      image:
        tag: REPLACED
        repository: REPLACED
      ingressClass: kube-ingress
      ingressClassByName: true
      ingressClassResource:
        controllerValue: k8s.io/kube-ingress
        enabled: true
        name: kube-ingress
      kind: DaemonSet
      metrics:
        enabled: true
        service:
          annotations:
            prometheus.io/port: "10254"
            prometheus.io/scrape: "true"
      nodeSelector:
        kube-ingress: enabled
      podLabels:
        application: ingress
        component: server
        release_group: airship-ingress-kube-system
      service:
        externalIPs:
          - REPLACED
        type: ClusterIP
    defaultBackend:
      enabled: true
      image:
        tag: REPLACED
        repository: REPLACED
      nodeSelector:
        kube-ingress: enabled
      podLabels:
        application: ingress
        component: error-pages
        release_group: airship-ingress-kube-system
    fullnameOverride: ingress
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ucp-mariadb
  labels:
    name: ucp-mariadb-global
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    # Chart source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.ucp.mariadb
      dest:
        path: .source

    # Images
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.ucp.mariadb
      dest:
        path: .values.images.tags

    # Endpoints
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: ucp_endpoints
        path: .ucp.oslo_db
      dest:
        path: .values.endpoints.oslo_db
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: ucp_endpoints
        path: .ucp.prometheus_mysql_exporter
      dest:
        path: .values.endpoints.prometheus_mysql_exporter

    # Accounts
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: ucp_service_accounts
        path: .ucp.oslo_db.admin
      dest:
        path: .values.endpoints.oslo_db.auth.admin
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: ucp_service_accounts
        path: .ucp.oslo_db.sst
      dest:
        path: .values.endpoints.oslo_db.auth.sst
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: ucp_service_accounts
        path: .ucp.oslo_db.audit
      dest:
        path: .values.endpoints.oslo_db.auth.audit
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: ucp_service_accounts
        path: .ucp.prometheus_mysql_exporter.user
      dest:
        path: .values.endpoints.oslo_db.auth.exporter
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: ucp_service_accounts
        path: .ucp.prometheus_mysql_exporter.user
      dest:
        path: .values.endpoints.prometheus_mysql_exporter.auth.user

    # Secrets
    - dest:
        path: .values.endpoints.oslo_db.auth.admin.password
      src:
        schema: deckhand/Passphrase/v1
        name: ucp_oslo_db_admin_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.sst.password
      src:
        schema: deckhand/Passphrase/v1
        name: ucp_oslo_db_sst_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.audit.password
      src:
        schema: deckhand/Passphrase/v1
        name: ucp_oslo_db_audit_password
        path: .
    - dest:
        path: .values.endpoints.oslo_db.auth.exporter.password
      src:
        schema: deckhand/Passphrase/v1
        name: ucp_oslo_db_exporter_password
        path: .
    - dest:
        path: .values.endpoints.prometheus_mysql_exporter.auth.user.password
      src:
        schema: deckhand/Passphrase/v1
        name: ucp_oslo_db_exporter_password
        path: .

    # Forming the container name for database backups to go into
    - dest:
        - path: .values.conf.backup.remote_backup.container_name
          pattern: DOMAIN
      src:
        schema: pegleg/CommonAddresses/v1
        name: common-addresses
        path: .dns.ingress_domain

data:
  chart_name: ucp-mariadb
  release: ucp-mariadb
  namespace: ucp
  protected:
    continue_processing: false
  wait:
    timeout: 1800
    labels:
      release_group: clcp-ucp-mariadb
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    options:
      force: true
    pre:
      delete:
        - type: job
          labels:
            release_group: clcp-ucp-mariadb
  values:
    volume:
      size: 30Gi
      backup:
        size: 50Gi
    conf:
      backup:
        enabled: true
        days_to_keep: 3
        remote_backup:
          enabled: true
          container_name: DOMAIN
          days_to_keep: 14
          storage_policy: ncbackup_pt
    monitoring:
      prometheus:
        enabled: true
    labels:
      server:
        node_selector_key: ucp-control-plane
        node_selector_value: enabled
      prometheus_mysql_exporter:
        node_selector_key: ucp-control-plane
        node_selector_value: enabled
      ingress:
        node_selector_key: ucp-control-plane
        node_selector_value: enabled
      error_server:
        node_selector_key: ucp-control-plane
        node_selector_value: enabled
    pod:
      security_context:
        server:
          container:
            mariadb:
              allowPrivilegeEscalation: false
      mandatory_access_control:
        type: apparmor
        mariadb-ingress-error-pages:
          init: runtime/default
          ingress-error-pages: runtime/default
        mariadb-ingress:
          init: runtime/default
          ingress: runtime/default
        mariadb-server:
          init: runtime/default
          mariadb-perms: runtime/default
          mariadb: runtime/default
        mariadb-backup:
          init: runtime/default
          backup-perms: runtime/default
          mariadb-backup: runtime/default
        mariadb-test:
          init: runtime/default
          mariadb-test: runtime/default
        prometheus-mysql-exporter:
          init: runtime/default
          mysql-exporter: runtime/default
        create-sql-user:
          init: runtime/default
          exporter-create-sql-user: runtime/default
      affinity:
        anti:
          type:
            default: requiredDuringSchedulingIgnoredDuringExecution
      replicas:
        server: 1
        ingress: 1
    manifests:
      # Enable automated backups
      cron_job_mariadb_backup: true
      # Not needing to create a keystone user - it should already be created on CH
      job_ks_user: false
      # Backing up to local PVC in addition to CH backups
      pvc_backup: true
      # Enable backup/restore secrets
      secret_backup_restore: true
  dependencies:
    - mariadb-htk
...

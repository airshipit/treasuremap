---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-rabbitmq
  labels:
    name: openstack-rabbitmq-global
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    # Chart source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh.rabbitmq
      dest:
        path: .source

    # Images
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.osh.rabbitmq
      dest:
        path: .values.images.tags

    # Endpoints
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.oslo_messaging
      dest:
        path: .values.endpoints.oslo_messaging
    - src:
        schema: pegleg/EndpointCatalogue/v1
        name: osh_endpoints
        path: .osh.openstack_rabbitmq_exporter
      dest:
        path: .values.endpoints.prometheus_rabbitmq_exporter
    # Credentials
    - src:
        schema: pegleg/AccountCatalogue/v1
        name: osh_service_accounts
        path: .osh.oslo_messaging.admin
      dest:
        path: .values.endpoints.oslo_messaging.auth.user

    # Secrets

    - src:
        schema: deckhand/Passphrase/v1
        name: osh_rabbitmq_erlang_cookie
        path: .
      dest:
        path: .values.endpoints.oslo_messaging.auth.erlang_cookie
    - src:
        schema: deckhand/Passphrase/v1
        name: osh_oslo_messaging_admin_password
        path: .
      dest:
        path: .values.endpoints.oslo_messaging.auth.user.password
data:
  chart_name: openstack-rabbitmq
  release: openstack-rabbitmq
  namespace: openstack
  test:
    enabled: false
  wait:
    timeout: 900
    labels:
      release_group: clcp-openstack-rabbitmq
    resources:
      - type: statefulset
        min_ready: 50%
      - type: job
    native:
      enabled: false
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    options:
      force: true
      # NOTE(lamt): Uncomment when rotating erlang cookies to ensure pods
      # are re-created properly.
      # recreate_pods: true
    pre:
      delete:
        - type: job
          labels:
            release_group: clcp-openstack-rabbitmq
  values:
    volume:
      size: 5Gi
    pod:
      replicas:
        server: 2
      affinity:
        anti:
          type:
            server: requiredDuringSchedulingIgnoredDuringExecution
      resources:
        enabled: true
        server:
          requests:
            memory: "8192Mi"
            cpu: "12000m"
          limits:
            memory: "8192Mi"
            cpu: "12000m"
    network:
      management:
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers "X-XSS-Protection: 1; mode=block";
              more_set_headers "X-Frame-Options: deny";
    labels:
      server:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
      prometheus_rabbitmq_exporter:
        node_selector_key: openstack-control-plane
        node_selector_value: enabled
    monitoring:
      prometheus:
        enabled: true
  dependencies:
    - os-rabbit-htk
...
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: os-rabbit-htk
  layeringDefinition:
    abstract: false
    layer: global
  substitutions:
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .charts.osh.rabbitmq-htk
      dest:
        path: .source
  storagePolicy: cleartext
data:
  chart_name: os-rabbit-htk
  release: os-rabbit-htk
  namespace: os-rabbit-htk
  timeout: 600
  wait:
    timeout: 600
  upgrade:
    no_hooks: true
  values: {}
  dependencies: []
...

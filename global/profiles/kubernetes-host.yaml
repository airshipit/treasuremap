---
schema: promenade/HostSystem/v1
metadata:
  schema: metadata/Document/v1
  name: host-system
  labels:
    name: host-system-global
  layeringDefinition:
    abstract: false
    layer: global
  storagePolicy: cleartext
  substitutions:
    #NOTE: /hyperkube in k8s 1.17+ images is a useless shell script
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.hyperkube
      dest:
        path: .files[0].docker_image

    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .files.kubernetes
      dest:
        - path: .files[1].tar_url
        - path: .files[2].tar_url

    # Initial CoreDNS image (used during node Genesis and node join)
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.coredns.coredns
      dest:
        path: .images.coredns

    # Initial haproxy image (used during node Genesis and node join)
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.haproxy.haproxy
      dest:
        path: .images.haproxy

    # Operational tools
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.ucp.armada.helm
      dest:
        path: .images.helm.helm

    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.hyperkube
      dest:
        path: .images.kubernetes.hyperkube

    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.monitoring_image
      dest:
        path: .images.monitoring_image

    # System packages
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.named
      dest:
        path: .packages.genesis.required
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.unnamed
      dest:
        path: .packages.genesis.additional
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.named
      dest:
        path: .packages.join.required
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.unnamed
      dest:
        path: .packages.join.additional

    # Genesis validation image
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .validation
      dest:
        path: .validation

#    # Artifactory Auth'd Docker Repo (docker-nc)
#    - src:
#        schema: nc/CorridorConfig/v1
#        name: corridor-config
#        path: .artifactory.hostnames.docker
#      dest:
#        path: .files[5].content
#        pattern: DOCKER_ARTIFACTORY_REPO_URL
#    # Artifactory authorization
#    - src:
#        schema: nc/CorridorConfig/v1
#        name: corridor-config
#        path: .artifactory.auth_key
#      dest:
#        path: .files[5].content
#        pattern: DH_SUB_ARTIFACTORY_DOCKER_KEY
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.ceph.url
      dest:
        - path: .packages
          pattern: CEPH_REPO
          recurse:
            depth: -1
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.ceph.distributions[0]
      dest:
        - path: .packages
          pattern: CEPH_DISTRO
          recurse:
            depth: -1
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.ceph.components[0]
      dest:
        - path: .packages
          pattern: CEPH_COMPONENT
          recurse:
            depth: -1
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.ceph.gpgkey
      dest:
        - path: .packages
          pattern: CEPH_GPG_KEY
          recurse:
            depth: -1
    # Docker source
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.docker.url
      dest:
        - path: .packages
          pattern: DOCKER_REPO
          recurse:
            depth: -1
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.docker.distributions[0]
      dest:
        - path: .packages
          pattern: DOCKER_DISTRO
          recurse:
            depth: -1
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.docker.components[0]
      dest:
        - path: .packages
          pattern: DOCKER_COMPONENT
          recurse:
            depth: -1
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .packages.repositories.docker.gpgkey
      dest:
        - path: .packages
          pattern: DOCKER_GPG_KEY
          recurse:
            depth: -1

#    # Artifactory Auth'd Docker Repo (docker-nc)
#    - src:
#        schema: nc/CorridorConfig/v1
#        name: corridor-config
#        path: .artifactory.hostnames.docker
#      dest:
#        path: .files[8].content
#        pattern: DOCKER_ARTIFACTORY_REPO_URL
#
#    # Artifactory authorization
#    - src:
#        schema: nc/CorridorConfig/v1
#        name: corridor-config
#        path: .artifactory.auth_key
#      dest:
#        path: .files[8].content
#        pattern: DH_SUB_ARTIFACTORY_DOCKER_KEY

    # Pause image for sandbox
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .images.kubernetes.pause
      dest:
        path: .files[8].content
        pattern: PAUSE_IMAGE

    # CRI tool
    - src:
        schema: pegleg/SoftwareVersions/v1
        name: software-versions
        path: .files.crictl
      dest:
        path: .files[9].tar_url
data:
  # see (and update if needed)
  # type/cruiser/profiles/kubernetes-host.yaml (data.files)
  files:
    # .files[0]
    - path: /opt/kubernetes/bin/hyperkube
      file_path: /hyperkube
      mode: 0555
    # .files[1]
    - path: /opt/kubernetes/bin/kubelet
      tar_path: kubernetes/node/bin/kubelet
      mode: 0555
    # .files[2]
    - path: /usr/local/bin/kubectl
      tar_path: kubernetes/node/bin/kubectl
      mode: 0555
    # .files[3]
    - path: /etc/logrotate.d/json-logrotate
      mode: 0444
      content: |-
        /var/lib/docker/containers/*/*-json.log
        {
            compress
            copytruncate
            create 0644 root root
            daily
            dateext
            dateformat -%Y%m%d-%s
            maxsize 100M
            missingok
            notifempty
            su root root
            rotate 4
        }
    # .files[4]
    - path: /etc/logrotate.d/rsyslog
      mode: 0444
      content: |-
        /var/log/syslog
        {
            rotate 7
            size 10M
            create 640 syslog adm
            su root syslog
            daily
            missingok
            notifempty
            delaycompress
            compress
            dateext
            dateformat -%Y%m%d-%s
            postrotate
            /bin/kill -HUP `cat /var/run/rsyslogd.pid 2> /dev/null` 2> /dev/null || true
            reload rsyslog >/dev/null 2>&1 || true
            endscript
        }

        /var/log/mail.info
        /var/log/mail.warn
        /var/log/mail.err
        /var/log/mail.log
        /var/log/daemon.log
        /var/log/kern.log
        /var/log/auth.log
        /var/log/user.log
        /var/log/lpr.log
        /var/log/cron
        /var/log/debug
        /var/log/secure
        /var/log/messages
        {
            rotate 7
            daily
            size 10M
            create 640 syslog adm
            su root syslog
            missingok
            notifempty
            compress
            delaycompress
            sharedscripts
            dateext
            dateformat -%Y%m%d-%s
            postrotate
            /bin/kill -HUP `cat /var/run/rsyslogd.pid 2> /dev/null` 2> /dev/null || true
            reload rsyslog >/dev/null 2>&1 || true
            endscript
        }
    # NOTE(pc1210):Docker AUTH is not requried for upstream images, can be removed
    # .files[5]
    - path: /var/lib/kubelet/.dockercfg
      mode: 0400
    #  content: |-
    #    {
    #       "https://DOCKER_ARTIFACTORY_REPO_URL": {
    #         "auth": "DH_SUB_ARTIFACTORY_DOCKER_KEY"
    #       }
    #    }
    # .files[6]
    # NOTE(mb874d): This file is used to signal to the promjoin bootaction to
    # not run a second time.
    - path: /var/lib/prom.done
      mode: 0444
      content: ""
    # .files[7]
    - path: /root/.bash_profile
      mode: 0740
      content: |-
        export KUBECONFIG=/etc/kubernetes/admin/kubeconfig.yaml
    # .files[8]
    - path: /etc/containerd/config.toml
      mode: 0400
      content: |-
        version = 2

        [debug]
          level = "warn"

        [plugins."io.containerd.grpc.v1.cri"]
          sandbox_image = "PAUSE_IMAGE"

        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v2"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
             SystemdCgroup = true
    # .files[9]
    - path: /usr/bin/crictl
      tar_path: crictl
      mode: 0555
    # .files[10]
    - path: /etc/crictl.yaml
      mode: 0400
      content: |-
        runtime-endpoint: unix:///run/containerd/containerd.sock
        image-endpoint: unix:///run/containerd/containerd.sock
        timeout: 10
  packages:
    # NOTE(aw442m): During gensis, mini-mirror runs as a standalone container
    # on localhost, managed by pre-genesis.sh.
    # The repositories listed here will be in
    # /etc/apt/sources.list.d/promenade-genesis-sources.list
    genesis:
      repositories:
        - deb http://mirror.mirantis.com/testing/ceph-nautilus/bionic CEPH_DISTRO CEPH_COMPONENT
        - deb http://mirror.mirantis.com/testing/kubernetes-extra/bionic DOCKER_DISTRO DOCKER_COMPONENT
      keys:
      - |-
          CEPH_GPG_KEY
      - |-
          DOCKER_GPG_KEY
  # NOTE(aw442m): repository information is populated here from versions.yaml.
    # The repositories listed here will be in
    # /etc/apt/sources.list.d/promenade-join-sources.list
    join:
      repositories:
        - deb CEPH_REPO CEPH_DISTRO CEPH_COMPONENT
        - deb DOCKER_REPO DOCKER_DISTRO DOCKER_COMPONENT
      keys:
      - |-
          CEPH_GPG_KEY
      - |-
          DOCKER_GPG_KEY
...
